version: '3'

services:

  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
      
  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./logger-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
      
  listener-service:
    build:
      context: ./listener-service
      dockerfile: ./listener-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1

  user-service:
    build:
      context: ./user-service
      dockerfile: ./user-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1

  post-service:
    build:
      context: ./post-service
      dockerfile: ./post-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8084:80"
    deploy:
      mode: replicated
      replicas: 1
     
  logger-mongo:
    image: 'mongo:5'
    restart: always
    ports:
      - "9000:27017"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./logger-service/data/mongodb/:/data/db

  listener-rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "9001:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./listener-service/data/rabbitmq/:/var/lib/rabbitmq/

  user-postgres:
    image: 'postgres:15-alpine'
    restart: always
    ports:
      - "9002:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=${USER_DB_USERNAME}
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}
      - POSTGRES_DB=${USER_DB_NAME}
    volumes:
      - ./user-service/data/postgres/:/var/lib/postgresql/data/
