version: '3'

services:

  broker-service:
    build:
      context: ./broker-service/build
      dockerfile: ./Dockerfile
    depends_on:
      - user-service
      - post-service
    env_file: .env
    restart: always
    ports:
      - ${BROKER_WEB_SERVER_PORT}:${BROKER_WEB_SERVER_PORT}
    deploy:
      mode: replicated
      replicas: 1
      
  logger-service:
    build:
      context: ./logger-service/build
      dockerfile: ./Dockerfile
    depends_on:
      - logger-mongo
    env_file: .env
    restart: always
    ports:
      - ${LOGGER_GRPC_SERVER_PORT}:${LOGGER_GRPC_SERVER_PORT}
    deploy:
      mode: replicated
      replicas: 1
      
  listener-service:
    build:
      context: ./listener-service
      dockerfile: ./listener-service.dockerfile
    env_file: .env
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1

  user-service:
    build:
      context: ./user-service/build
      dockerfile: ./Dockerfile
    depends_on:
      - user-postgres
    env_file: .env
    restart: always
    ports:
      - ${USER_GRPC_SERVER_PORT}:${USER_GRPC_SERVER_PORT}
    deploy:
      mode: replicated
      replicas: 1

  post-service:
    build:
      context: ./post-service/build
      dockerfile: ./Dockerfile
    depends_on:
      - post-postgres
    env_file: .env
    restart: always
    ports:
      - ${POST_GRPC_SERVER_PORT}:${POST_GRPC_SERVER_PORT}
    deploy:
      mode: replicated
      replicas: 1
     
  logger-mongo:
    image: 'mongo:5'
    restart: always
    ports:
      - ${LOGGER_DB_PORT}:27017
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./logger-service/data/mongodb/:/data/db

  listener-rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "9001:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./listener-service/data/rabbitmq/:/var/lib/rabbitmq/

  user-postgres:
    image: postgres:15-alpine
    restart: always
    ports:
      - ${USER_DB_PORT}:5432
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=${USER_DB_USERNAME}
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}
      - POSTGRES_DB=${USER_DB_NAME}
    volumes:
      - ./user-service/data/postgres/:/var/lib/postgresql/data/

  post-postgres:
    image: postgres:15-alpine
    restart: always
    ports:
      - ${POST_DB_PORT}:5432
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=${POST_DB_USERNAME}
      - POSTGRES_PASSWORD=${POST_DB_PASSWORD}
      - POSTGRES_DB=${POST_DB_NAME}
    volumes:
      - ./post-service/data/postgres/:/var/lib/postgresql/data/
